swagger: "2.0"
info:
  title: Bank Argent API Documentation
  description: Contains API endpoints for managing user accounts and transactions
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /accounts/{accountsId}:
    get:
      tags:
        - User Module
      summary: Retrieve User's Accounts
      description: Retrieve details of a user's bank accounts
      security:
        - tokenAuth: []
      parameters:
        - name: accountsId
          in: path
          description: ID of the user's accounts to retrieve
          required: true
          type: string
      responses:
        200:
          description: User's accounts retrieved successfully
          schema:
            $ref: "#/definitions/Accounts"
        400:
          description: Invalid Fields
        401:
          description: Unauthorized. Invalid or missing token.
        403:
          description: Forbidden. Access denied.
        404:
          description: User not found
        500:
          description: Internal Server Error

  /accounts/{accountsId}/transactions:
    get:
      tags:
        - User Module
      summary: Retrieve User's Transactions
      description: Retrieve transactions from the user's account
      security:
        - tokenAuth: []
      parameters:
        - name: accountsId
          in: path
          description: ID of the user's account to retrieve transactions from
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description: Transactions profile retrieved successfully
          schema:
            $ref: "#/definitions/TransactionsResponse"
        400:
          description: Invalid Fields
        401:
          description: Unauthorized. Invalid or missing token.
        403:
          description: Forbidden. Access denied.
        500:
          description: Internal Server Error

  /transaction/{transactionsId}:
    get:
      security:
        - tokenAuth: []
      tags:
        - User Module
      summary: Read Selected Transaction
      description: API for reading details of a selected transaction
      parameters:
        - name: transactionsId
          in: path
          description: ID of the transaction to retrieve
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description: Transactions profile retrieved successfully
          schema:
            $ref: "#/definitions/TransactionResponse"
        400:
          description: Invalid Fields
        401:
          description: Unauthorized. Invalid or missing token.
        403:
          description: Forbidden. Access denied.
        500:
          description: Internal Server Error

  /transactions/{transactionsId}/annotation:
    patch:  
      security:
        - tokenAuth: []
      tags:
        - User Module
      summary: Update User Transaction Annotation
      description: API for updating the annotation in a user's transaction
      parameters:
        - name: transactionsId
          in: path
          description: ID of the transaction to update annotation
          required: true
          type: string
        - in: body
          name: body
          description: Transaction annotation data
          required: true
          schema:
            $ref: "#/definitions/TransactionAnnotation"
      produces:
        - application/json
      responses:
        200:
          description: User transaction annotation updated successfully
          schema:
            $ref: "#/definitions/TransactionAnnotationResponse"
        400:
          description: Invalid Fields
        401:
          description: Unauthorized. Invalid or missing token.
        403:
          description: Forbidden. Access denied.
        500:
          description: Internal Server Error

securityDefinitions:
  tokenAuth:
    type: apiKey
    name: Authorization
    in: header
    description: Token-based authentication. Provide the token in the format 'Bearer {token}'.
definitions:
  Accounts:
    type: object
    properties:
      accountId:
        type: string
        description: Unique identifier for the account.
      balance:
        type: number
        description: Current balance of the account.
  TransactionsResponse:
    type: object
    properties:
      numberOfTransactions:
        type: number
        description: Number of transactions in the response.
      transactions:
        type: array
        items:
          type: object
          properties:
            transactionId:
              type: string
              description: Unique identifier for the transaction.
            date:
              type: string
              description: Date of the transaction.
            amount:
              type: number
              description: Transaction amount.
            place:
              type: string
              description: Location or description of the transaction.
            balance:
              type: number
              description: Account balance after the transaction.
  TransactionResponse:
    type: object
    properties:
      transactionId:
        type: string
        description: Unique identifier for the transaction.
      date:
        type: string
        description: Date of the transaction.
      amount:
        type: number
        description: Transaction amount.
      place:
        type: string
        description: Location or description of the transaction.
      balance:
        type: number
        description: Account balance after the transaction.
      transactionType:
        type: string
        description: Type of the transaction.
      category:
        type: string
        description: Category of the transaction.
      comment:
        type: string
        description: Additional comment or notes for the transaction.
  TransactionAnnotationResponse:
    properties:
      category:
        type: string
        description: Category associated with the transaction.
      comment:
        type: string
        description: Comment associated with the transaction.
  TransactionAnnotation:
    type: object
    properties:
      category:
        type: string
        description: Category associated with the transaction.
      comment:
        type: string
        description: Comment associated with the transaction.
